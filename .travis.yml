# Using container-based infrastructure
# sudo: false
# enable trusty beta
sudo: required
dist: trusty

# 'bash' will define a generic environment without interfering environment
# settings like "CC=gcc"
language: bash

# Only build the master branch
branches:
    only:
        - master

# Caching the downloaded src packages between several builds to save travis-ci
# download time and bandwidth
cache:
    directories:
        - $HOME/src
        - $HOME/x-tools
        # - $HOME/zlib-install
        # - $HOME/openssl-install
        # - $HOME/pcre-install
        # - $HOME/libsodium-install
        # - $HOME/mbedtls-install
        # - $HOME/libev-install


# Installing needed dependencies
addons:
    apt:
        packages:
            - bison
            - flex
            - gperf
            # - libncurses5
            # - libncurses5-dev
            # - libncursesw5
            # - libncursesw5-dev
            - texinfo
            - help2man
            - asciidoc
            - xmlto
            - libgmp-dev 
            - nettle-dev
            # - libtool
            # - autogen
            # - automake
            - libstdc++6
            - lib32stdc++6 
            - net-tools
            - perl
            # - python
            
            - gcc-multilib
            - g++-multilib
            - lib32z1-dev
            # - gconf
            # - pkg-config
            # - uuid-dev

# Handle git submodules yourself
git:
    submodules: false
    
# Use sed to replace the SSH URL with the public URL, then initialize submodules
# before_install:
    # - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
    # - git submodule update --init --recursive
    # - sudo apt-get update -qq
    # - sudo apt-get install libpcre3 libpcre3-dev -y
    
# Building crosstool-NG core
# keep these on at all times because it is fast
install:
    - pwd

# Here is the list of all the standard samples tracked
# by the continuous integration system
env:
    matrix:
        # - export PATH=$HOME/x-tools/mipsel-unknown-linux-uclibc/bin:$PATH
        # - BROADCOM_SDK=6

        - TT_BUILD=ac68e  BROADCOM_SDK=src-rt-6.x.4708
        - TT_BUILD=ac68z  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=n18e  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=n18z  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=ac15  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=dir868l  BROADCOM_SDK=src-rt-6.x.4708

        # - TT_BUILD=r7000e  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=r7000z  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=r6400e  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=r6400z  BROADCOM_SDK=src-rt-6.x.4708
        - TT_BUILD=r7000init  BROADCOM_SDK=src-rt-6.x.4708
        - TT_BUILD=r6250init  BROADCOM_SDK=src-rt-6.x.4708
        - TT_BUILD=r6300v2init  BROADCOM_SDK=src-rt-6.x.4708
        - TT_BUILD=r6400v2init  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=r1do  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=ws880e  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=ws880z  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=wzr1750e  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=wzr1750z  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=ea6700e  BROADCOM_SDK=src-rt-6.x.4708
        # - TT_BUILD=ea6700z  BROADCOM_SDK=src-rt-6.x.4708

        # # include:
        # #     - BROADCOM_SDK=6
        # - TT_BUILD=r64e BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=r64z BROADCOM_SDK=src-rt-6.x

        # - TT_BUILD=ac66e BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=ac66z BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=w1800re BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=w1800rz BROADCOM_SDK=src-rt-6.x

        # - TT_BUILD=r6300e BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=r6300z BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=wndr4500e BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=wndr4500z BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=wndr4500v2e BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=wndr4500v2z BROADCOM_SDK=src-rt-6.x
        # - TT_BUILD=n80o BROADCOM_SDK=src-rt-6.x


    global:
        - secure: GqlmfhuWWdfnNxIJLh4SgbxICjiSQ0pfjiTdZah8QAT5dYIWRK/RGWILQUx6J78qTyCFiylN+U1+nhQi+80snp3XREl8t0OvDgo2jdYYDV9ftJELV1DuBSHa6umd2/yxZRHwCuvDD/mgDFhLcDH6AtcGgW20ed16UJBRPc4CJcL/qqHcV4mr8ajLfaJDrvsgrlcADYZ8jZ2lqigRKzIyLzqq+mKKFNnHplpa+wnPuxxwksPSNX1K+6m3L/FVOhtjt4iUvjyVP3VL4alTEyNdloZBqIzJwRGuBH7aCGPLBIRAoILiTVHTdVc9TTu82YDc96juMDG1oqRqlHDc4urucRTe0KR5pdUFGlHqSzM2KPL4S1WB90WNDj6L6JH9fynwET5Qh1l8OLjFVFqDHcRANcxlRPB4MCgIXQW24klHqsM0u7SNloVSF0DpijUOMw0lSp0M2dBiBPuen14cIdcT6lkxKLPARetEc6YCtdF/SQW5uCrDUX2FtyUdgp45ZANcAdC2xP7ViS9W53gM9hS6lcN3LsCLkzTv6p6GGR0Vyc/5lFrtWTufrGYvLTHJ7InspT7wJLTvuvJ5nltqsRVPKtZob7/lRizI6adCECXpcTggoJpIdgeDusw9e1HSHui9LYQoMWjrxd6BFeZDUXp/3KL2iVPsb7k+xysjsZRU704=
        
# Building the standard samples
script:
    # - . ls -l $HOME
    - sudo apt-get remove uuid-dev
    - . $TRAVIS_BUILD_DIR/.travis.sh      # Load the travis environment
    - echo ============================
    - pre_build_prep # > /dev/null
    - build_tomato

# On failure displaying the last lines of the log file
after_failure:
    - echo ============= tomato ===============
    - tail -n 1000 ~/tomato.txt
    
    
after_success: . $TRAVIS_BUILD_DIR/update-gh-pages.sh
